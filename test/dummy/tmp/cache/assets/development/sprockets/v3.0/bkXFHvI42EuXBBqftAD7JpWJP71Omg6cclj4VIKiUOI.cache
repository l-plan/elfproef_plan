I"‡
(function() {
  var ElfProef, root, zip;

  ElfProef = (function() {
    function ElfProef(nr) {
      this.nr = nr.toString().match(/[\d+$]/g);
      this.nrs = [2, 3, 4, 5, 6, 7, 8, 9].reverse();
      this.str = this.nr.join('');
    }

    ElfProef.prototype.elfproef = function(a) {
      var j, len, reeks, som, x;
      this.nrs.push(a);
      som = 0;
      reeks = zip(this.nrs, this.nr);
      for (j = 0, len = reeks.length; j < len; j++) {
        x = reeks[j];
        som += x[0] * x[1];
      }
      return som % 11 === 0 && som > 0;
    };

    ElfProef.prototype.validBsn = function() {
      if (this.nr.length > 9) {
        return false;
      }
      while (this.nr.length < 9) {
        this.nr.unshift(0);
      }
      return this.elfproef(-1);
    };

    ElfProef.prototype.validRekening = function() {
      var ref;
      if ((ref = this.nr.length) !== 9 && ref !== 10) {
        return false;
      }
      if (this.nr.length === 10) {
        this.nrs.unshift(10);
      }
      return this.elfproef(1);
    };

    return ElfProef;

  })();

  zip = function() {
    var arr, i, j, length, lengthArray, ref, results;
    lengthArray = (function() {
      var j, len, results;
      results = [];
      for (j = 0, len = arguments.length; j < len; j++) {
        arr = arguments[j];
        results.push(arr.length);
      }
      return results;
    }).apply(this, arguments);
    length = Math.min.apply(Math, lengthArray);
    results = [];
    for (i = j = 0, ref = length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      results.push((function() {
        var k, len, results1;
        results1 = [];
        for (k = 0, len = arguments.length; k < len; k++) {
          arr = arguments[k];
          results1.push(arr[i]);
        }
        return results1;
      }).apply(this, arguments));
    }
    return results;
  };

  $(function() {
    $(document).on('blur', '.checkMyBsn', function() {
      var bsn;
      bsn = new ElfProef(this.value);
      if (bsn.validBsn()) {
        $(".checkMyBsn").val(bsn.str);
        return $(".bsn_message").text("ok");
      } else {
        return $(".bsn_message").text("geen geldig bsn-nummer");
      }
    });
    return $(document).on('blur', '.checkMyRekening', function() {
      var rek;
      rek = new ElfProef(this.value);
      if (rek.validRekening()) {
        $(".checkMyRekening").val(rek.str);
        return $(".rekening_message").text("ok");
      } else {
        return $(".rekening_message").text("geen geldig rekening-nummer");
      }
    });
  });

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.ElfProef = ElfProef;

}).call(this);
:ET